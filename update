# ─────────────────────────────────────────────────── #
#                    ██ ▄█▀  ██████                   #
#                    ██▄█▒ ▒██    ▒                   #
#                   ▓███▄░ ░ ▓██▄                     #
#                   ▓██ █▄   ▒   ██▒                  #
#                   ▒██▒ █▄▒██████▒▒                  #
#                   ▒ ▒▒ ▓▒▒ ▒▓▒ ▒ ░                  #
#                   ░ ░▒ ▒░░ ░▒  ░ ░                  #
#                   ░ ░░ ░ ░  ░  ░                    #
#                   ░  ░         ░                    #
# ─────────────────────────────────────────────────── #
options:
#	Nome: KhSetRole | Autor: Kick Holse
	version: 1.0

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# events
join:
	khcore_notifyUpdate(player, "KhSetRole", "khsr", "90601", "{@version}", "setrole atualizar")

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# commands
command setrole [<text = help>] [<text>]:
	permission: khsr.*
	permission message: §3[KhSR] §7v{@version} §f- §7Criado por §6Kick Holse§7.
	trigger:
		arg 1 = "help":
			send "%nl%&e  Ajuda - SetRole 1/1%nl% "
			send "&3 /setrole <jogador> &f- &7Lista todos os cargos"
			send "&3 /setrole <jogador> <role> &f- &7Seta um cargo específico"
			send "&3 /setrole atualizar &f- &7Atualiza o skript%nl%"
		else:
			arg 1 = "atualizar":
				khcore update player {khsr::check_update} "KhSetRole" script
			else:
				arg 1 parsed as offlineplayer is not player:
					arg 1 parsed as offlineplayer is online:
						yaml list "options.roles-op" from "khsr.language" contains khcore_roles_getRole(arg 1 parsed as offlineplayer):
							send yaml value "messages.role-op" from "khsr.language"
							stop
						arg 2 is set:
							yml value "roles.%arg 2%" from file "plugins/KhCore/roles.yml" exists
							khsr_checkPosInd(player, khcore_roles_getRole(arg 1 parsed as offlineplayer)) is true:
								khsr_checkPosInd(player, arg 2) is true:
									khsr_setGroup(player, arg 1 parsed as player, arg 2)
								else:
									send yaml value "messages.higher" from "khsr.language"
							else:
								send yaml value "messages.lower" from "khsr.language"
						else:
							khsr_listGroups(player, arg 1 parsed as player)
					else:
						send yaml value "messages.offline" from "khsr.language"
				else:
					send yaml value "messages.self" from "khsr.language"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# filemanager
function khsr_filemanager():
	khcore downgit "KhSetRole/language.yml" "https://raw.githubusercontent.com/KickHolse/KhSetRole/main/files/language"
	loop currently loaded yaml files:
		loop-value contains "khsr.language"
		unload yaml loop-value
	load yaml "plugins/KhSetRole/language.yml" as "khsr.language"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# functions
function khsr_setGroup(p: player, arg: offlineplayer, cargo: text):
	khsr_checkType({_p})
	set {_argc} to khcore_roles_getColored({_arg})
	yaml value "options.type" from "khsr.language" is "json":
		send replacer "{player}" with {_argc} in replacer "{role}" with khsr_getColored({_cargo}) in yaml value "messages.sucess" from "khsr.language" to {_p}
		make console execute command replacer "{role}" with {_cargo} in replacer "{player}" with {_arg}'s displayname in yaml value "options.command" from "khsr.language"
		khcore_roles_setup({_arg}, true)
	yaml value "options.type" from "khsr.language" is "gui":
		khcore_playSound({_p}, CLICK, 1, 15)
		open chest inventory with yaml value "confirm.gui.rows" from "khsr.language" rows named replacer "{player}" with {_arg}'s displayname in yaml value "confirm.gui.title" from "khsr.language" to {_p}
		wait a tick
		loop skutil yaml nodes "confirm.gui.items" from file "plugins/KhSetRole/language.yml":
			set {_item} to replacer "{player}" with {_arg}'s displayname in yaml value "confirm.gui.items.%loop-value%.icon" from "khsr.language"
			set {_item} to khcore_getItem({_item})
			set {_lore} to replacer "{role}" with khsr_getColored({_cargo}) in replacer "{current_role}" with khcore_roles_getColoredGroup({_arg}) in replacer "\n" with "||" in khcore_getLore(yaml value "confirm.gui.items.%loop-value%.icon" from "khsr.language")
			set {_x} to loop-value
			make a gui slot yaml value "confirm.gui.items.%loop-value%.slot" from "khsr.language" of {_p} with {_item} without nbt named replacer "{colored}" with {_argc} in khcore_getName(yaml value "confirm.gui.items.%loop-value%.icon" from "khsr.language") with lore {_lore} to run:
				yaml value "confirm.gui.items.%{_x}%.execute" from "khsr.language" contains "close":
					close {_p}'s inventory
				yaml value "confirm.gui.items.%{_x}%.execute" from "khsr.language" contains "confirm":
					close {_p}'s inventory
					send replacer "{player}" with {_argc} in replacer "{role}" with khsr_getColored({_cargo}) in yaml value "messages.sucess" from "khsr.language"
					make console execute command replacer "{role}" with {_cargo} in replacer "{player}" with {_arg}'s displayname in yaml value "options.command" from "khsr.language"
					khcore_roles_setup({_arg}, true)
				yaml value "confirm.gui.items.%{_x}%.execute" from "khsr.language" contains "none":
					khcore_playSound({_p}, ITEM_PICKUP, 1, 15)
function khsr_listGroups(p: player, arg: offlineplayer):
	khsr_checkType({_p})
	set {_argc} to khcore_roles_getColored({_arg})
	yaml value "options.type" from "khsr.language" is "json":
		send replacer "{player}" with khcore_roles_getColored({_arg}) in replacer "\n" with newline in yaml value "listgroups.json.header" from "khsr.language" to {_p}
		loop skutil yaml nodes "roles" from file "plugins/KhCore/roles.yml":
			khsr_checkPosInd({_p}, "%loop-value%") is true:
				set {_list} to replacer "{role}" with khsr_getColored("%loop-value%") in yaml value "listgroups.json.list" from "khsr.language"
				send "<command:/setrole %{_arg}% %loop-value%>%{_list}%<reset>" to {_p}
		send "" to {_p}
	yaml value "options.type" from "khsr.language" is "gui":
		khcore_playSound({_p}, CLICK, 1, 15)
		open chest inventory with khsr_getRows() rows named yaml value "listgroups.gui.title" from "khsr.language" to {_p}
		wait a tick
		set {_slot} to 10
		loop skutil yaml nodes "roles" from file "plugins/KhCore/roles.yml":
			khsr_checkPosInd({_p}, "%loop-value%") is true:
				set {_name} to khsr_getColored("%loop-value%")
				set {_cargo} to loop-value
				make a gui slot {_slot} of {_p} with khsr_getColors(khcore_getLastColor(khsr_getColored("%loop-value%"))) without nbt named {_name} to run:
					make {_p} execute command "setrole %{_arg}% %{_cargo}%"
				add 1 to {_slot}
				{_slot} is 17 or 26 or 35:
					add 2 to {_slot}
				{_slot} is 43:
					exit loop
function khsr_getColors(color: text) :: material:
	colored {_color} is "§0":
		return player head with custom nbt "{SkullOwner:{Id:""063df521-537b-48d4-8fab-d303500e29ca"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOTY3YTJmMjE4YTZlNmUzOGYyYjU0NWY2YzE3NzMzZjRlZjliYmIyODhlNzU0MDI5NDljMDUyMTg5ZWUifX19""}]}}}"
	colored {_color} is "§1":
		return player head with custom nbt "{SkullOwner:{Id:""8a4771f0-1b60-47e7-95d7-827bdea8166f"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYTJjZDI3MmVlYjM4YmY3ODNhOThhNDZmYTFlMmU4ZDQ2MmQ4NTJmYmFhZWRlZjBkY2UyYzFmNzE3YTJhIn19fQ==""}]}}}"
	colored {_color} is "§2":
		return player head with custom nbt "{SkullOwner:{Id:""9113c2d9-acfd-4f7e-bdb0-cbd029a4e3f4"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOGU5YjI3ZmNjZDgwOTIxYmQyNjNjOTFkYzUxMWQwOWU5YTc0NjU1NWU2YzljYWQ1MmU4NTYyZWQwMTgyYTJmIn19fQ==""}]}}}"
	colored {_color} is "§3":
		return player head with custom nbt "{SkullOwner:{Id:""09f14600-a016-4979-83b8-95610cbd8e9f"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvOTViOWE0ODQ2N2YwMjEyYWE2ODg2NGU2MzQyMTE2ZjhmNzlhMjc1NDU0YmYyMTVmNjdmNzAxYTZmMmM4MTgifX19""}]}}}"
	colored {_color} is "§4":
		return player head with custom nbt "{SkullOwner:{Id:""5c33b8a3-6608-4402-94df-e87f7f6848db"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZGY0ZGMzYzM3NTNiZjViMGI3ZjA4MWNkYjQ5YjgzZDM3NDI4YTEyZTQxODdmNjM0NmRlYzA2ZmFjNTRjZSJ9fX0=""}]}}}"
	colored {_color} is "§5":
		return player head with custom nbt "{SkullOwner:{Id:""46b5e8fd-1468-4462-ab4a-3ed65789f403"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYTMyYWUyY2I4ZDJhZTYxNTE0MWQyYzY1ODkyZjM2NGZjYWRkZjczZmRlYzk5YmUxYWE2ODc0ODYzZWViNWMifX19""}]}}}"
	colored {_color} is "§6":
		return player head with custom nbt "{SkullOwner:{Id:""1df5c53a-d181-4f49-9200-785b78160f94"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMmM0ODg2ZWYzNjJiMmM4MjNhNmFhNjUyNDFjNWM3ZGU3MWM5NGQ4ZWM1ODIyYzUxZTk2OTc2NjQxZjUzZWEzNSJ9fX0=""}]}}}"
	colored {_color} is "§7":
		return player head with custom nbt "{SkullOwner:{Id:""88d30ea4-2521-4df7-98b5-fdd837b3c52f"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMzhlMjk1NzY5OWJjOThhNGI1ZDYzNGFiNzE4NjdlZWIxODZiOTM0YmRiNjVkMmM0YjlkY2MyYjYxM2NmNSJ9fX0=""}]}}}"
	colored {_color} is "§8":
		return player head with custom nbt "{SkullOwner:{Id:""96411e87-efd7-47d7-a688-8655222a038a"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjA4ZjMyMzQ2MmZiNDM0ZTkyOGJkNjcyODYzOGM5NDRlZTNkODEyZTE2MmI5YzZiYTA3MGZjYWM5YmY5In19fQ==""}]}}}"
	colored {_color} is "§9":
		return player head with custom nbt "{SkullOwner:{Id:""51d4b34d-d594-4b14-a1b9-a4bcd63ecb1d"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZjgxNTdiNGRjNWVmYzIxNzM1Mjg5NDQ3MWMxMTZkMzlhMDM0ZmMzOTdjMjQ1MzlhOWQwZWViMmE0NjVjYSJ9fX0=""}]}}}"
	colored {_color} is "§a":
		return player head with custom nbt "{SkullOwner:{Id:""028c59eb-fd0d-454d-b140-249a24942fdd"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZTllNGJkY2YxNzJkNWRjNzdjMmJkNGUzN2FkOTg1Mzk5YTlmMmNkZWJmNzI0NjM5MjllYTRiNjY2ZWY2ZjgwIn19fQ==""}]}}}"
	colored {_color} is "§b":
		return player head with custom nbt "{SkullOwner:{Id:""89c31154-c27e-4168-86ed-be87320b0d0c"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMDdjNzhmM2VlNzgzZmVlY2QyNjkyZWJhNTQ4NTFkYTVjNDMyMzA1NWViZDJmNjgzY2QzZTgzMDJmZWE3YyJ9fX0=""}]}}}"
	colored {_color} is "§c":
		return player head with custom nbt "{SkullOwner:{Id:""6edc03f4-71d9-4cc8-8632-ecb08c304a72"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNWZkZTNiZmNlMmQ4Y2I3MjRkZTg1NTZlNWVjMjFiN2YxNWY1ODQ2ODRhYjc4NTIxNGFkZDE2NGJlNzYyNGIifX19""}]}}}"
	colored {_color} is "§d":
		return player head with custom nbt "{SkullOwner:{Id:""5560070f-beb6-401d-abc0-f20a4f7d8f53"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNzNiMGFmODNkMGM3MjhhZWVjYTQ3MGYwOGExZDc1ZjQxY2VlMjUzYTM1NzNiYTQxNTdjYTI0MzNlNmMzNiJ9fX0=""}]}}}"
	colored {_color} is "§e":
		return player head with custom nbt "{SkullOwner:{Id:""11d8b86f-8c1c-4a47-bc34-26dba4640a5c"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYzY0MTY4MmY0MzYwNmM1YzlhZDI2YmM3ZWE4YTMwZWU0NzU0N2M5ZGZkM2M2Y2RhNDllMWMxYTI4MTZjZjBiYSJ9fX0=""}]}}}"
	colored {_color} is "§f":
		return player head with custom nbt "{SkullOwner:{Id:""8868682c-5cd8-430f-ad06-ca6dae4903ed"",Properties:{textures:[{Value:""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMzY2YTVjOTg5MjhmYTVkNGI1ZDViOGVmYjQ5MDE1NWI0ZGRhMzk1NmJjYWE5MzcxMTc3ODE0NTMyY2ZjIn19fQ==""}]}}}"
	return barrier
function khsr_getRows() :: number:
	set {_x} to size of yaml nodes "roles" from file "plugins/KhCore/roles.yml"
	{_x} <= 7:
		return 3
	{_x} <= 14:
		return 4
	{_x} <= 21:
		return 5
	return 6
function khsr_checkPosInd(p: player, role: text) :: boolean:
	set {_pos} to size of skutil yaml nodes "roles" from file "plugins/KhCore/roles.yml"
	loop skutil yaml nodes "roles" from file "plugins/KhCore/roles.yml":
		loop-value is {_role}:
			set {_pos.%{_role}%} to {_pos}
		remove 1 from {_pos}
	{_pos.%{_role}%} > {position.%{_p}%}:
		return true
	return false
function khsr_checkType(p: player):
	yaml value "options.type" from "khsr.language" is not "gui" or "json":
		send "%nl% &cOs argumentos inserido em 'options.type' na linguagem não existe.%nl% " to {_p}
		send "&7 Utilize 'gui' ou 'json'%nl%" to {_p}
function khsr_getColored(role: text) :: text:
	set {_name} to yml value "roles.%{_role}%.name" from file "plugins/KhCore/roles.yml"
	set {_p} to yml value "roles.%{_role}%.prefix" from file "plugins/KhCore/roles.yml"
	set {_color} to khcore_getLastColor("%{_p}%")
	return colored "%{_color}%%{_name}%"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────────── #
# load
load:
	khsr_filemanager()
	delete {khsr::check_update}
	wait 1 second
	text from "https://api.spigotmc.org/legacy/update.php?resource=90601" is not "{@version}":
		set {khsr::check_update} to true
		send "&3[KHSR] &cYou are not using the latest version of skript" to console
	else:
		send "&3[KHSR] &aYou are using the latest version of skript" to console
	send "&3[KHSR] &aKhSR &8v{@version} &aenabled!" to console
