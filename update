# ─────────────────────────────────────────────────── #
#                    ██ ▄█▀  ██████                   #
#                    ██▄█▒ ▒██    ▒                   #
#                   ▓███▄░ ░ ▓██▄                     #
#                   ▓██ █▄   ▒   ██▒                  #
#                   ▒██▒ █▄▒██████▒▒                  #
#                   ▒ ▒▒ ▓▒▒ ▒▓▒ ▒ ░                  #
#                   ░ ░▒ ▒░░ ░▒  ░ ░                  #
#                   ░ ░░ ░ ░  ░  ░                    #
#                   ░  ░         ░                    #
# ─────────────────────────────────────────────────── #
options:
#	KhSetRole | crafted by Kick Holse
	version: 1.1

#               C  O  M  M  A  N  D  S                #
# ─────────────────────────────────────────────────── #
command setrole [<text=help>] [<text>]:
	permission: khsetrole.*
	permission message: §3[KhSetRole] §7v{@version} §f- §7Crafted by §6Kick Holse§7.
	trigger:
		arg-1 = "help":
			send "%nl%&e  Help%nl% "
			send "&3 /setrole [player] &f- &7List all roles"
			send "&3 /setrole [player] [role] &f- &7Set a specific role%nl%"
		else:
			set {_p} to arg-1 parsed as offlineplayer
			"%{_p}%" != "%player%":
				{_p} is online:
					yaml list "options.roles_op" from "ks.srole.language" contains khcore_roles({_p}, "get", "role"):
						send krole_getConfig("messages.role_op")
						stop
					arg-2 is set:
						yaml value "roles.%arg-2%" from file "plugins/KhCore/roles.yml" exists
						set {_pa2} to khcore_roles(player, "position", arg-2) parsed as int
						set {_pa1} to khcore_roles({_p}, "position", khcore_roles({_p}, "get", "role")) parsed as int
						set {_puser} to khcore_roles(player, "position", khcore_roles(player, "get", "role")) parsed as int
						{_puser} <= {_pa1}:
							{_puser} <= {_pa2}:
								set {_x} to khcore_roles({_p}, "get", "colored")
								make console execute command replacer "{player}" and "{role}" with "%{_p}%" and arg-2 in krole_getConfig("options.command")
								setup role to {_p} and true
								send replacer "{player}" and "{role}" with {_x} and khcore_roles({_p}, "get", "coloredgroup") in krole_getConfig("messages.success")
							else:
								send krole_getConfig("messages.higher")
						else:
							send krole_getConfig("messages.lower")
					else:
						krole_listing(player, {_p})
				else:
					send krole_getConfig("messages.offline")
			else:
				send krole_getConfig("messages.self")

#              F  U  N  C  T  I  O  N  S              #
# ─────────────────────────────────────────────────── #
function krole_getConfig(key: String) :: text:
	return yaml value {_key} from "ks.srole.language"
function krole_getRoleColor(role: String) :: text:
	set {_name} to yaml value "roles.%{_role}%.name" from file "plugins/KhCore/roles.yml"
	set {_color} to yaml value "roles.%{_role}%.prefix" from file "plugins/KhCore/roles.yml"
	set {_color} to first color from {_color}
	return "%{_color}%%{_name}%"

function krole_listing(p: Player, op: Offlineplayer):
	krole_getConfig("options.type") = "json":
		send replacer "{player}" and "\n" with khcore_roles({_op}, "get", "colored") and newline in krole_getConfig("listgroups.json.header") to {_p}
		loop yaml nodes "roles" from file "plugins/KhCore/roles.yml":
			set {_prole} to khcore_roles({_op}, "position", "%loop-value%") parsed as int
			set {_puser} to khcore_roles({_p}, "position", khcore_roles({_p}, "get", "role")) parsed as int
			{_puser} <= {_prole}:
				set {_format} to replacer "{role}" with krole_getRoleColor("%loop-value%") in krole_getConfig("listgroups.json.format")
				set {_tp} to replacer "{role}" and "{player}" with krole_getRoleColor("%loop-value%") and khcore_roles({_op}, "get", "colored") in krole_getConfig("listgroups.json.tooltip")
				send "<command:/setrole %{_op}% %loop-value%><tooltip:%{_tp}%>%{_format}%<reset>" to {_p}
		send "" to {_p}
	else:
		set {_rows} to 3
		set {_slot} to 10
		size of yaml nodes "roles" from file "plugins/KhCore/roles.yml" is between 8 and 14:
			set {_rows} to 4
		size of yaml nodes "roles" from file "plugins/KhCore/roles.yml" > 14:
			set {_rows} to 5
		open chest inventory with {_rows} rows named krole_getConfig("listgroups.gui.title") to {_p}
		wait a tick
		loop yaml nodes "roles" from file "plugins/KhCore/roles.yml":
			set {_prole} to khcore_roles({_op}, "position", "%loop-value%") parsed as int
			set {_puser} to khcore_roles({_p}, "position", khcore_roles({_p}, "get", "role")) parsed as int
			{_puser} <= {_prole}:
				set {_color} to replacer "&" with "§" in first color from krole_getRoleColor("%loop-value%")
				set {_icon} to replacer "{item}" and "{player}" with krole_getConfig("listgroups.gui.colors.%{_color}%.icon") and khcore_roles({_op}, "get", "colored") in krole_getConfig("listgroups.gui.icon")
				set {_loo} to loop-value
				make a gui slot {_slot} of {_p} with deserializeItem(replacer "{role}" with krole_getRoleColor("%loop-value%") in {_icon}, {_p}) to run:
					krole_confirm({_p}, {_op}, {_loo})
				add 1 to {_slot}
				{_slot} is 17 or 26:
					add 2 to {_slot}
function krole_confirm(p: Player, op: Offlineplayer, rolee: String):
	set {_rows} to yaml value "confirm.rows" from "ks.srole.language"
	open chest inventory with {_rows} rows named replacer "{player}" with "%{_op}%" in krole_getConfig("confirm.title") to {_p}
	wait a tick
	loop yaml nodes with keys "confirm.items" from "ks.srole.language":
		set {_loop} to loop-value
		set {_role} to krole_getRoleColor({_rolee})
		set {_icon} to replacer "{colored}" and "{current_role}" and "{role}" with khcore_roles({_op}, "get", "colored") and khcore_roles({_op}, "get", "coloredgroup") and {_role} in krole_getConfig("confirm.items.%loop-value%.icon")
		set {_slot} to yaml value "confirm.items.%loop-value%.slot" from "ks.srole.language"
		make a gui slot {_slot} of {_p} with deserializeItem({_icon}, {_op}) to run:
			krole_getConfig("confirm.items.%{_loop}%.execute") = "confirm":
				make player execute command "setrole %{_op}% %{_rolee}%"
			krole_getConfig("confirm.items.%{_loop}%.execute") = "confirm" or "cancel":
				close {_p}'s inventory
				
#                     L  O  A  D                      #
# ─────────────────────────────────────────────────── #
load:
	fileExists("plugins/KhSetRole/language.yml") != true:
		create file "plugins/KhSetRole/language.yml"
		delete file "plugins/KhSetRole/language.yml"
		download from "https://raw.githubusercontent.com/KickHolse/KhSetRole/main/files/language" to file "plugins/KhSetRole/language.yml"
	yaml "ks.srole.language" is loaded:
		unload yaml "ks.srole.language"
	load yaml "plugins/KhSetRole/language.yml" as "ks.srole.language"
	text from "https://api.spigotmc.org/legacy/update.php?resource=90601" != "{@version}":
		send "[KhSetRole] &cYou are not using the latest version of skript." to console
